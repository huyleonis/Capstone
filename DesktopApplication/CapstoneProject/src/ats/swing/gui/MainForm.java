/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ats.swing.gui;

import ats.connection.AutoPaymentRequest;
import ats.connection.ManualPaymentRequest;
import ats.connection.LoopRequest;
import ats.dtos.VehiclePayment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Chi Hieu
 */
public class MainForm extends javax.swing.JFrame {

    Timer timer;
    AutoPaymentRequest apr = new AutoPaymentRequest();
    //LoopRequest lp = new LoopRequest();
    
    
   Queue<VehiclePayment> qe = apr.getAutoTrans(1);
    //Queue<VehiclePayment> qe = lp.getListTransaction(1);

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        //Timer timer;
        initComponents();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        lbId.setVisible(false);
        //updateForm();
//        String licensePlate = txtLicensePlate.getText().trim();
//        if ("".equals(licensePlate)) {
//            timer = new Timer(1000, new ActionListener() {
//                @Override
//                public void actionPerformed(ActionEvent e) {
//                    if (!qe.isEmpty()) {
//                        VehiclePayment vp = qe.poll();
//                        DecimalFormat formatter = new DecimalFormat("###,###,###.##");
//                        if (vp.getLicensePlate().length() > 0 && vp.getFee() > 0 && vp.getTypeName().length() > 0) {
//                            txtLicensePlate.setText(vp.getLicensePlate());
//                            lbPirce.setText(formatter.format(vp.getFee()) + " đồng");
//                            lbTypeName.setText(vp.getTypeName());
//                            lbStatus.setText(vp.getStatus());
//                        }
//                    } else {
//                        txtLicensePlate.setText("");
//                        lbPirce.setText("Chưa có xe mới...");
//                        lbTypeName.setText("Chưa có xe mới...");
//                        lbStatus.setText("Chưa có xe mới...");
//                    }
//                }
//            });
//        }
//        timer.start();
    }

    public void updateForm() {
        String licensePlate = txtLicensePlate.getText().trim();
        if ("".equals(licensePlate) || licensePlate.isEmpty()) {
            timer = new Timer(1000, btnOpenCarrier.getAction());
//                @Override
//                public void actionPerformed(ActionEvent e) {
//                    if (!qe.isEmpty()) {
//                        VehiclePayment vp = qe.poll();
//                        DecimalFormat formatter = new DecimalFormat("###,###,###.##");
//                        if (vp.getLicensePlate().length() > 0 && vp.getFee() > 0 && vp.getTypeName().length() > 0) {
//                            txtLicensePlate.setText(vp.getLicensePlate());
//                            lbPirce.setText(formatter.format(vp.getFee()) + " đồng");
//                            lbTypeName.setText(vp.getTypeName());
//                            lbStatus.setText(vp.getStatus());
//                        }
//                    } else {
//                        txtLicensePlate.setText("");
//                        lbPirce.setText("Chưa có xe mới...");
//                        lbTypeName.setText("Chưa có xe mới...");
//                        lbStatus.setText("Chưa có xe mới...");
//                    }
//                }
//            });
//        } else {
//            //timer.stop();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabHome = new javax.swing.JPanel();
        InfoPane = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtLicensePlate = new javax.swing.JTextField();
        lbPirce = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbTypeName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        btnManualPayment = new javax.swing.JButton();
        lbId = new javax.swing.JLabel();
        btnOpenCarrier = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        tabHistory = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistory = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        tabReport = new javax.swing.JPanel();
        tabSetting = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new java.awt.CardLayout());

        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1280, 720));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1280, 720));

        tabHome.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tabHome.setPreferredSize(new java.awt.Dimension(1280, 720));

        InfoPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Xe hiện tại", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 24), new java.awt.Color(102, 102, 255))); // NOI18N
        InfoPane.setMaximumSize(new java.awt.Dimension(270, 350));
        InfoPane.setMinimumSize(new java.awt.Dimension(270, 350));
        InfoPane.setPreferredSize(new java.awt.Dimension(270, 350));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Biển số xe:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Loại xe:");

        txtLicensePlate.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtLicensePlate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLicensePlate.setToolTipText("Nhập biển số xe");
        txtLicensePlate.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtLicensePlate.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtLicensePlateCaretUpdate(evt);
            }
        });
        txtLicensePlate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLicensePlateActionPerformed(evt);
            }
        });
        txtLicensePlate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLicensePlateKeyPressed(evt);
            }
        });

        lbPirce.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbPirce.setForeground(new java.awt.Color(255, 0, 51));
        lbPirce.setText("VNĐ");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Giá tiền:");

        lbTypeName.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbTypeName.setForeground(new java.awt.Color(255, 0, 51));
        lbTypeName.setText("Loại xe");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Tình trạng:");

        lbStatus.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbStatus.setForeground(new java.awt.Color(255, 0, 51));
        lbStatus.setText("Đã thu phí");

        btnManualPayment.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        btnManualPayment.setText("Đã Thu");
        btnManualPayment.setToolTipText("Ấn để tiến hành thu phí");
        btnManualPayment.setName(""); // NOI18N
        btnManualPayment.setPreferredSize(new java.awt.Dimension(140, 40));
        btnManualPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManualPaymentActionPerformed(evt);
            }
        });
        btnManualPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnManualPaymentKeyPressed(evt);
            }
        });

        lbId.setText("id");

        javax.swing.GroupLayout InfoPaneLayout = new javax.swing.GroupLayout(InfoPane);
        InfoPane.setLayout(InfoPaneLayout);
        InfoPaneLayout.setHorizontalGroup(
            InfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(InfoPaneLayout.createSequentialGroup()
                        .addGroup(InfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbPirce, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(InfoPaneLayout.createSequentialGroup()
                                .addComponent(txtLicensePlate, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnManualPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbId, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        InfoPaneLayout.setVerticalGroup(
            InfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InfoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InfoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLicensePlate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManualPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPirce)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTypeName)
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbId)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btnOpenCarrier.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        btnOpenCarrier.setText("Mở Cổng");
        btnOpenCarrier.setToolTipText("Ấn để tiến hành thu phí");
        btnOpenCarrier.setName(""); // NOI18N
        btnOpenCarrier.setPreferredSize(new java.awt.Dimension(140, 40));
        btnOpenCarrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenCarrierActionPerformed(evt);
            }
        });
        btnOpenCarrier.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnOpenCarrierKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout tabHomeLayout = new javax.swing.GroupLayout(tabHome);
        tabHome.setLayout(tabHomeLayout);
        tabHomeLayout.setHorizontalGroup(
            tabHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabHomeLayout.createSequentialGroup()
                .addGroup(tabHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabHomeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(InfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabHomeLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(btnOpenCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabHomeLayout.setVerticalGroup(
            tabHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tabHomeLayout.createSequentialGroup()
                        .addComponent(InfoPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnOpenCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thu Phí", tabHome);
        tabHome.getAccessibleContext().setAccessibleName("");

        tblHistory.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHistory.setSelectionBackground(new java.awt.Color(255, 255, 153));
        jScrollPane1.setViewportView(tblHistory);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Tìm kiếm theo số xe");

        txtSearch.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSearch.setText("Tìm kiếm");

        javax.swing.GroupLayout tabHistoryLayout = new javax.swing.GroupLayout(tabHistory);
        tabHistory.setLayout(tabHistoryLayout);
        tabHistoryLayout.setHorizontalGroup(
            tabHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabHistoryLayout.createSequentialGroup()
                .addGroup(tabHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabHistoryLayout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch))
                    .addGroup(tabHistoryLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        tabHistoryLayout.setVerticalGroup(
            tabHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabHistoryLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(tabHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lịch Sử Giao Dịch", tabHistory);
        tabHistory.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout tabReportLayout = new javax.swing.GroupLayout(tabReport);
        tabReport.setLayout(tabReportLayout);
        tabReportLayout.setHorizontalGroup(
            tabReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1275, Short.MAX_VALUE)
        );
        tabReportLayout.setVerticalGroup(
            tabReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Báo Cáo và Phân Tích", tabReport);
        tabReport.getAccessibleContext().setAccessibleName("");
        tabReport.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout tabSettingLayout = new javax.swing.GroupLayout(tabSetting);
        tabSetting.setLayout(tabSettingLayout);
        tabSettingLayout.setHorizontalGroup(
            tabSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1275, Short.MAX_VALUE)
        );
        tabSettingLayout.setVerticalGroup(
            tabSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Cài Đặt", tabSetting);

        getContentPane().add(jTabbedPane1, "card2");
        jTabbedPane1.getAccessibleContext().setAccessibleName("JTabbedPane");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void btnManualPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManualPaymentActionPerformed
        ManualPaymentRequest rs = new ManualPaymentRequest();
        VehiclePayment vp;
        String id = lbId.getText();
        String status = "";
        if (id.length() > 0) {

            try {
                vp = rs.updateManualPayment(id);
                status = vp.getStatus();
                lbStatus.setText(status);
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (status.length() > 0) {
            JOptionPane.showMessageDialog(null, status, "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_btnManualPaymentActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed


    private void txtLicensePlateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLicensePlateActionPerformed

    }//GEN-LAST:event_txtLicensePlateActionPerformed

    private void txtLicensePlateCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtLicensePlateCaretUpdate


    }//GEN-LAST:event_txtLicensePlateCaretUpdate

    private void btnManualPaymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnManualPaymentKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            timer.stop();
//            btnManualPayment.doClick();
//        }

    }//GEN-LAST:event_btnManualPaymentKeyPressed

    private void txtLicensePlateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLicensePlateKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            //timer.stop();
            String licensePlate = txtLicensePlate.getText();
            ManualPaymentRequest rs = new ManualPaymentRequest();
            VehiclePayment vp = new VehiclePayment();
            try {
                vp = rs.insertManualPayment(licensePlate, 1);
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            DecimalFormat formatter = new DecimalFormat("###,###,###.##");
            if (licensePlate.length() > 0 && vp.getFee() > 0 && vp.getTypeName().length() > 0) {
                lbPirce.setText(formatter.format(vp.getFee()) + " đồng");
                lbTypeName.setText(vp.getTypeName());
                lbStatus.setText(vp.getStatus());
                lbId.setText(vp.getId());
            } else {
                lbPirce.setText("");
                lbTypeName.setText("");
                lbStatus.setText("");
                lbId.setText("");
            }
        }
    }//GEN-LAST:event_txtLicensePlateKeyPressed
    // list transaction


    private void btnOpenCarrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenCarrierActionPerformed
        //timer.stop();
        String id = lbId.getText();
        qe.addAll(apr.getAutoTrans(1));
        if(id != "id"){
            ManualPaymentRequest mpr = new ManualPaymentRequest();
            try {
                mpr.finishManualPayment(id);
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (!qe.isEmpty()) {
            VehiclePayment vp = qe.poll();
            DecimalFormat formatter = new DecimalFormat("###,###,###.##");
            if (vp != null) {
                txtLicensePlate.setText(vp.getLicensePlate());
                lbPirce.setText(formatter.format(vp.getFee()) + " đồng");
                lbTypeName.setText(vp.getTypeName());
                lbStatus.setText(vp.getStatus());
                lbId.setText(vp.getId());
            }
        } else {
            txtLicensePlate.setText("");
            lbPirce.setText("Chưa có xe mới...");
            lbTypeName.setText("Chưa có xe mới...");
            lbStatus.setText("Chưa có xe mới...");
            lbId.setText("id");
            //timer.start();
        }

//        ManualPaymentRequest mpr = new ManualPaymentRequest();
//        try {
//            VehiclePayment vp = mpr.finishManualPayment(lbId.getText());
//            lbPirce.setText("");
//            lbTypeName.setText("");
//            lbStatus.setText("");
//            lbId.setText("");
//        } catch (Exception ex) {
//            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_btnOpenCarrierActionPerformed

    private void btnOpenCarrierKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnOpenCarrierKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOpenCarrierKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InfoPane;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btnManualPayment;
    private javax.swing.JButton btnOpenCarrier;
    private javax.swing.JButton btnSearch;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbId;
    private javax.swing.JLabel lbPirce;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JLabel lbTypeName;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JPanel tabHistory;
    private javax.swing.JPanel tabHome;
    private javax.swing.JPanel tabReport;
    private javax.swing.JPanel tabSetting;
    private javax.swing.JTable tblHistory;
    private javax.swing.JTextField txtLicensePlate;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
